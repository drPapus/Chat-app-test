{"ast":null,"code":"var _jsxFileName = \"/var/www/html/React/socket-chat/frontend/chat-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:8000');\n\nfunction App() {\n  _s();\n\n  const [message, setMessage] = useState('');\n  console[(chat, setChat)] = useState([]);\n  useEffect(() => {\n    socket.on('massege', payload => {\n      set;\n    });\n  });\n\n  const sendMassage = e => {\n    e.preventDefault();\n    console.log(message);\n    socket.emit('message', {\n      message\n    });\n    setMessage('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to chat app\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMassage,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"message\",\n        placeholder: \"Type message\",\n        value: message,\n        onChange: e => {\n          setMessage(e.target.value);\n        },\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"H/ViPFA3nBl1uS/edyPyIsQw3p8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/var/www/html/React/socket-chat/frontend/chat-app/src/App.js"],"names":["React","useState","useEffect","io","socket","App","message","setMessage","console","chat","setChat","on","payload","set","sendMassage","e","preventDefault","log","emit","target","value"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,EAAP,MAAe,kBAAf;;AAEA,MAAMC,MAAM,GAAGD,EAAE,CAAC,uBAAD,CAAjB;;AAEA,SAASE,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;AACAO,EAAAA,OAAO,EAAEC,IAAI,EAAEC,OAAR,EAAP,GAA0BT,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,MAAM,CAACO,EAAP,CAAU,SAAV,EAAqBC,OAAO,IAAG;AAC3BC,MAAAA,GAAG;AACN,KAFD;AAID,GALQ,CAAT;;AAOA,QAAMC,WAAW,GAAGC,CAAD,IAAK;AACtBA,IAAAA,CAAC,CAACC,cAAF;AACAR,IAAAA,OAAO,CAACS,GAAR,CAAYX,OAAZ;AACAF,IAAAA,MAAM,CAACc,IAAP,CAAY,SAAZ,EAAuB;AAACZ,MAAAA;AAAD,KAAvB;AACAC,IAAAA,UAAU,CAAC,EAAD,CAAV;AAED,GAND;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,QAAQ,EAAEO,WAAhB;AAAA,8BACA;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,SAAxB;AACA,QAAA,WAAW,EAAC,cADZ;AAEA,QAAA,KAAK,EAAER,OAFP;AAGA,QAAA,QAAQ,EAAGS,CAAD,IAAK;AAACR,UAAAA,UAAU,CAACQ,CAAC,CAACI,MAAF,CAASC,KAAV,CAAV;AAA2B,SAH3C;AAIA,QAAA,QAAQ;AAJR;AAAA;AAAA;AAAA;AAAA,cADA,eAOA;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAnCQf,G;;KAAAA,G;AAqCT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from 'react'\nimport io from 'socket.io-client'\n\nconst socket = io('http://localhost:8000')\n\nfunction App() {\n\n  const [message, setMessage] = useState('')\n  console [chat, setChat] = useState([])\n\n  useEffect(() => {\n    socket.on('massege', payload =>{\n        set\n    } )\n \n  })\n\n  const sendMassage= (e)=>{\n    e.preventDefault();\n    console.log(message)\n    socket.emit('message', {message})\n    setMessage('')\n   \n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Welcome to chat app</h1>\n      <form onSubmit={sendMassage}>\n      <input type='text' name='message'\n      placeholder='Type message'\n      value={message}\n      onChange={(e)=>{setMessage(e.target.value)}}\n      required      \n      ></input>\n      <button type='submit'>Send</button>\n      \n      </form>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}